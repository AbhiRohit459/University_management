package university.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.sql.*;public class StudentFeeForm extends JFrame implements ActionListener {    Choice CrollNumber;    JComboBox<String> courseBox, departmentBox;    JTextField paidField;    JLabel totalField, dueField;    JButton calculate, pay, back;    StudentFeeForm() {        getContentPane().setBackground(new Color(210, 252, 251));        JLabel heading = new JLabel("Student Fee Form");        heading.setBounds(300, 20, 400, 30);        heading.setFont(new Font("Tahoma", Font.BOLD, 24));        add(heading);        JLabel rollLabel = new JLabel("Select Roll Number:");        rollLabel.setBounds(50, 80, 150, 20);        add(rollLabel);        CrollNumber = new Choice();        CrollNumber.setBounds(200, 80, 150, 20);        add(CrollNumber);        try {            Conn c = new Conn();            ResultSet rs = c.statement.executeQuery("SELECT rollno FROM student");            while (rs.next()) {                CrollNumber.add(rs.getString("rollno"));            }        } catch (Exception e) {            e.printStackTrace();        }        JLabel courseLabel = new JLabel("Course:");        courseLabel.setBounds(50, 120, 150, 20);        add(courseLabel);        String[] courses = {"B.Tech", "BBA", "BCA", "BSc", "MBA", "MCA"};        courseBox = new JComboBox<>(courses);        courseBox.setBounds(200, 120, 150, 20);        add(courseBox);        JLabel branchLabel = new JLabel("Branch:");        branchLabel.setBounds(50, 160, 150, 20);        add(branchLabel);        String[] branches = {"Computer Science", "Electronics", "Mechanical", "Civil", "Physics", "IT"};        departmentBox = new JComboBox<>(branches);        departmentBox.setBounds(200, 160, 150, 20);        add(departmentBox);        JLabel totalLabel = new JLabel("Total Fee:");        totalLabel.setBounds(50, 200, 150, 20);        add(totalLabel);        totalField = new JLabel("85000"); // Assume static total fee or you can fetch based on course        totalField.setBounds(200, 200, 150, 20);        add(totalField);        JLabel paidLabel = new JLabel("Amount Paid:");        paidLabel.setBounds(50, 240, 150, 20);        add(paidLabel);        paidField = new JTextField();        paidField.setBounds(200, 240, 150, 20);        add(paidField);        JLabel dueLabel = new JLabel("Due Amount:");        dueLabel.setBounds(50, 280, 150, 20);        add(dueLabel);        dueField = new JLabel("0");        dueField.setBounds(200, 280, 150, 20);        add(dueField);        calculate = new JButton("Calculate Due");        calculate.setBounds(50, 320, 130, 25);        calculate.addActionListener(this);        add(calculate);        pay = new JButton("Submit Payment");        pay.setBounds(200, 320, 150, 25);        pay.addActionListener(this);        add(pay);        back = new JButton("Back");        back.setBounds(150, 360, 100, 25);        back.addActionListener(this);        add(back);        setLayout(null);        setSize(700, 500);        setLocation(350, 150);        setVisible(true);    }    public void actionPerformed(ActionEvent e) {        if (e.getSource() == calculate) {            try {                double total = Double.parseDouble(totalField.getText());                double paid = Double.parseDouble(paidField.getText());                double due = total - paid;                dueField.setText(String.valueOf(due));            } catch (Exception ex) {                JOptionPane.showMessageDialog(null, "Please enter a valid paid amount.");            }        } else if (e.getSource() == pay) {            String roll = CrollNumber.getSelectedItem();            String course = (String) courseBox.getSelectedItem();            String branch = (String) departmentBox.getSelectedItem();            String total = totalField.getText();            String paid = paidField.getText();            String due = dueField.getText();            try {                Conn c = new Conn();                String q = "INSERT INTO fee (student_rollno, course, branch, total_fee, paid, due) VALUES (?, ?, ?, ?, ?, ?)";                PreparedStatement pst = c.connection.prepareStatement(q);                pst.setString(1, roll);                pst.setString(2, course);                pst.setString(3, branch);                pst.setDouble(4, Double.parseDouble(total));                pst.setDouble(5, Double.parseDouble(paid));                pst.setDouble(6, Double.parseDouble(due));                pst.executeUpdate();                JOptionPane.showMessageDialog(null, "Fee Submitted Successfully!");                setVisible(false);            } catch (Exception ex) {                ex.printStackTrace();                JOptionPane.showMessageDialog(null, "Failed to submit fee.");            }        } else {            setVisible(false);        }    }    public static void main(String[] args) {        new StudentFeeForm();    }}